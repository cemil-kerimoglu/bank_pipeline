name: CI

on:
  push:
    branches: ["main"]
  pull_request:

# Global environment variables reused in jobs
env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/bank_pipeline

jobs:
  unit-tests:
    name: "Run Unit Tests"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      # Micromamba provides fast conda environments with caching
      - name: Set up Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.yml
          environment-name: Scigility
          cache-downloads: true

      - name: Run pytest
        shell: bash -l {0}
        run: |
          pytest -v -m "not integration and not e2e" tests/

  integration-tests:
    name: "Run Integration Tests"
    needs: unit-tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.yml
          environment-name: Scigility
          cache-downloads: true

      - name: Run pytest (integration)
        shell: bash -l {0}
        run: |
          pytest -v -m integration tests/

  e2e-tests:
    name: "Run End-to-End Tests"
    needs: integration-tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Set up Micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: environment.yml
          environment-name: Scigility
          cache-downloads: true

      - name: Run pytest (e2e)
        shell: bash -l {0}
        run: |
          pytest -v -m e2e tests/

  build-and-push:
    name: "Build & Push Docker Image"
    needs: e2e-tests
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Pull and run the container
        run: |
          docker pull ${{ env.IMAGE_NAME }}:latest
          docker run --rm \
            -e AWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} \
            -e AWS_ACCESS_SECRET=${{ secrets.AWS_ACCESS_SECRET }} \
            -e AWS_BUCKET_NAME=${{ secrets.AWS_BUCKET_NAME }} \
            -e AWS_REGION=${{ secrets.AWS_REGION }} \
            ${{ env.IMAGE_NAME }}:latest
